Metadata-Version: 2.4
Name: simple_vpn
Version: 0.1.0
Summary: A simple VPN implementation using OpenVPN
Home-page: https://github.com/username/simple_vpn
Author: Simple VPN Team
Author-email: example@example.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: cryptography>=3.4.0
Requires-Dist: pyOpenSSL>=20.0.0
Requires-Dist: python-dotenv>=0.19.0
Requires-Dist: click>=8.0.0
Requires-Dist: pystun3>=1.0.0
Requires-Dist: tqdm>=4.62.0
Requires-Dist: psutil>=5.8.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Simple VPN

A simple VPN implementation that uses OpenVPN for secure connections.

## Features

- Easy-to-use command-line interface for both server and client
- User authentication system
- Automatic key and certificate generation
- VPN server configuration with sensible defaults
- Multi-platform support (Windows, macOS, Linux)
- Connection monitoring and statistics
- Secure encrypted tunnels using OpenVPN

## Prerequisites

- Python 3.6 or higher
- OpenVPN installed on both server and client machines

### Installing OpenVPN

#### Windows
Download and install from [OpenVPN website](https://openvpn.net/community-downloads/)

#### macOS
```bash
brew install openvpn
```

#### Linux (Ubuntu/Debian)
```bash
sudo apt-get install openvpn
```

#### Linux (CentOS/RHEL)
```bash
sudo yum install openvpn
```

## Installation

Install the package from source:

```bash
git clone https://github.com/username/simple_vpn.git
cd simple_vpn
pip install -e .
```

## Usage

### Server Setup

1. Set up the VPN server:

```bash
# Run with administrator/root privileges
sudo simple-vpn-server setup
```

2. Add a user:

```bash
sudo simple-vpn-server add-client client1
```

3. Start the VPN server:

```bash
sudo simple-vpn-server start
```

### Client Setup

1. First, copy the client configuration file from the server (usually located in `./vpn_configs/clients/client1/client1.ovpn`) to your client machine.

2. Connect to the VPN:

```bash
simple-vpn-client connect /path/to/client1.ovpn
```

3. To disconnect:

```bash
# Press Ctrl+C if in foreground mode
# Or if running in background:
simple-vpn-client disconnect
```

### Advanced Usage

#### Server Commands

```bash
# List all available commands
simple-vpn-server --help

# Add a user with admin privileges
simple-vpn-server add-client --admin client2

# Generate a client configuration
simple-vpn-server add-client client3

# Check server status
simple-vpn-server status

# Show server logs
simple-vpn-server logs
```

#### Client Commands

```bash
# List all available commands
simple-vpn-client --help

# Import a configuration file
simple-vpn-client import-config /path/to/client.ovpn

# List available configurations
simple-vpn-client list-configs

# Connect with username/password
simple-vpn-client connect config_name --username user1

# Check connection status
simple-vpn-client status

# Show connection logs
simple-vpn-client logs
```

## Configuration

Configuration files are stored in these locations:

- Windows: `%APPDATA%\SimpleVPN\`
- macOS/Linux: `~/.simple_vpn/`

### Server Configuration

The server configuration is stored in `simple_vpn_server.json` and includes:

- Port (default: 1194)
- Protocol (default: UDP)
- Subnet (default: 10.8.0.0/24)
- Cipher (default: AES-256-CBC)
- Monitoring settings

### Client Configuration

The client configuration is stored in `simple_vpn_client.json` and includes:

- Auto-reconnect settings
- Log verbosity
- DNS fallback settings

## Security Notes

- The VPN uses OpenVPN's encryption and security features
- Default cipher is AES-256-CBC
- TLS authentication is enabled by default
- Certificates are generated with 2048-bit RSA keys
- Diffie-Hellman parameters are used for key exchange

## Limitations

- Only supports the OpenVPN protocol
- Requires OpenVPN to be installed on both server and client
- Administrator/root privileges are required for network configuration

## License

This project is licensed under the MIT License - see the LICENSE file for details.

## Acknowledgments

- [OpenVPN](https://openvpn.net/) for their open-source VPN software
- Python community for excellent cryptography and networking libraries
